<tool id="GetPrimer" name="Homeolog Specific Primer Design">
  <description>for homeolog sequences in a fasta file</description>
  <command interpreter="python">getprimer4.py -i $input -s $min_size -l $max_size -g $targets -v $overlap -f 1 -o $output --mintm $mintm --maxtm $maxtm --maxtmdiff $maxtmdiff --minsize $minsize --maxsize $maxsize --maxhairpin $maxhairpin -b $blast -d $direction</command>
  
  <inputs>
    <param format="fasta" name="input" type="data" label="Homeolog sequences (a fasta file with all the homeolog sequences)"/>
    <param name="targets" size="100" type="text" value="" label="Primer target sequence name(s) (Separated with commas)"/>
    <param name="blast" type="select" label="Blast the output primers in the wheat genome?" help="If yes, will blast against Chinese_Spring_v1.0_pseudomolecules.">
        <option value="0">No</option>
        <option value="1">Yes</option>
    </param>
    <param name="direction" type="select" label="Design left primers, right primers or primer pairs?" help="Sometimes we only need to design left or right primers, then select here">
        <option value="both">Primer Pairs</option>
        <option value="left">Left Primers</option>
        <option value="right">Right Primers</option>
    </param>
    <param name="overlap" size="100" type="text" value="0-1" label="Check whether primers across these position ranges (Separated with commas, such as 59-60,300-400)" help="The default 0-1 will do nothing. The input must be a range, eg. n1-n2. Change the values here to check other ranges"/>
    <param name="min_size" size="4" type="integer" value="300" label="Minimum product size"/>
    <param name="max_size" size="4" type="integer" value="500" label="Maximum product size"/>
	<param name="mintm" size="4" type="integer" value="58" label="Minimum primer Tm"/>
	<param name="maxtm" size="4" type="integer" value="62" label="Maximum primer Tm"/>
	<param name="maxtmdiff" size="4" type="integer" value="2" label="Maximum Tm differences between left and right primers"/>
	<param name="maxhairpin" size="4" type="integer" value="45" label="Maximum hairpin score of primers"/>
	<param name="minsize" size="4" type="integer" value="18" label="Minimum primer size"/>
	<param name="maxsize" size="4" type="integer" value="23" label="Maximum primer size"/> 
  </inputs>

  <outputs>
    <data format="tabular" name="output">
        <discover_datasets pattern="primer3.input" format="txt" directory="." visible="true" />
		<discover_datasets pattern="alignment_raw.fa" format="fasta" directory="." visible="true" />
		<discover_datasets pattern="blast_out.txt" format="tabular" directory="." visible="true" />
    </data>
</outputs>
  
  <tests>
    <test>
      <param name="input" value="sequence.fa"/>
      <param name="targets" value="Chr-B2.2,Chr-B2.3"/>
      <param name="overlap" value="59-60,300-400"/>
      <output name="output" file="primers_for_B2.2_2.3.txt"/>
    </test>
  </tests>

  <help>

**OVERVIEW**

Python script to design genome or group specific primers using Muscle and Primer3.

For example:

I have a gene that has both homeologs and paralogs in wheat. Let's say the gene is CG. It has 3 paralogs in each wheat genome, and 3 homeologs across genomes:

A genome: CG-A1, CG-A2, CG-A3

B genome: CG-B1, CG-B2, CG-B3

D genome: CG-D1, CG-D2, CG-D3

I want primers to amplify homeologs but not paralogs, e.g. one pair of primers to only amplify CG-A1, CG-B1 and CG-D1, one pair of primers to only amplify CG-A2, CG-B2 and CG-D2, and one pair of primers to only amplify CG-A3, CG-B3 and CG-D3.

This python script with Primer3 can design primers that can only amplify one group of sequences but not the others.

------

**Command line example**

getprimer2.py -i sequence.fa -s 100 -l 500 -g Chr-B2.2,Chr-B2.3 -v 59-60,300-400 -f 1 -o primers_for_B2.2_2.3.txt

------

**Input**

A fasta file with all the homeolog sequences. The length of each sequence would better to be less than 2 kb. Otherwise the alignment may be not accurate and it takes longer time to finsih the job.

------

**Output**

There will be 3 outputs: 1. Designed Primers; 2. Primer3 input file; 3. Multiple sequence alignment file; 4. Primer blast output

------

**Titles in the blast output file:**

1: query id, subject id, % identity, alignment length, mismatches, gap opens, 

7: q. start, q. end, s. start, s. end, evalue, bit score

13: q. sequence, s. sequence, q. length s. length

------

**Titles in the primer output file**

**index**: primer pair index

**product_size**: product size

**primerID**: primer ID for left and right primers

**type**: left or right primer

**start**: primer start position on the template (the target sequence)

**end**: primer end position on the template (the target sequence)

**length**: primer length

**Tm**: primer melting temperature

**GCcontent**: primer GC content

**any**: The self-complementarity score of the oligo or primer (taken as a measure of its tendency to anneal to itself or form secondary structure).

**3'**: The 3' self-complementarity of the primer or oligo (taken as a measure of its tendency to form a primer-dimer with itself).

**hairpin**: The calculated value of the melting temperature of the most stable hairpin structure of the primer or oligo.

**primer_nvar**: total variation in the primer from the rest of sequences

**3'Diff**: whether the 3' end is different from at least 1 other sequence

**DiffAll**: whether the primer can differ all other sequences

**DifNumber**: how many sequences this primer can differ

**primer_score**: primer specificity score. The higher score, the better to differ other sequences.

**primer_seq**: primer sequence

**ReverseComplement**: Reverse Complement sequence of the primer

**penalty**: primer penalty. The smaller the better.

**compl_any**: the tendency of the left primer to bind to the right primer

**compl_end**: tries to bind the 3'-END of the left primer to the right primer and scores the best binding it can find.

**primerpair_score**: primer pair specificity score.

**primer_diff15**: number of variation with each of the other sequences in the first 15 bases from the 3' end

**primer_diff4**: number of variation with each of the other sequences in the first 4 bases from the 3' end

**across_overlap**: whether the primer across the range set by the user

**amplconGC**: GC content of the amplicon for optimizing PCR conditions

**matched_chromosomes**: chromosomes that the primer has no more than 1 mismatches in the first 4 bases from the 3' end according to the primer blast result

------

For more information go to : https://github.com/pinbo/getprimer
  </help>

</tool>
